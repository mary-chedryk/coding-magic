{"version":3,"file":"commonHelpers.js","sources":["../src/js/entry-modal.js","../src/js/google_dino.js"],"sourcesContent":["// Get the modal\nvar modal = document.getElementById(\"myModal\");\n\n// Get the button that opens the modal\nvar btn = document.getElementById(\"myBtn\");\n\n// Get the <span> element that closes the modal\nvar span = document.getElementsByClassName(\"close\")[0];\n\n// When the user clicks the button, open the modal \nbtn.onclick = function () {\n    modal.style.display = \"block\";\n}\n\n// When the user clicks on <span> (x), close the modal\nspan.onclick = function () {\n    modal.style.display = \"none\";\n}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function (event) {\n    if (event.target == modal) {\n        modal.style.display = \"none\";\n    }\n}\n","const canvas = document.getElementById(\"gameCanvas\");\nconst ctx = canvas.getContext(\"2d\");\n\nlet dino = { x: 50, y: 150, width: 40, height: 40, dy: 0, gravity: 0.6, jumpPower: -12, grounded: false };\nlet obstacles = [];\nlet frame = 0;\nlet gameOver = false;\n\nfunction drawDino() {\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(dino.x, dino.y, dino.width, dino.height);\n}\n\nfunction drawObstacles() {\n    ctx.fillStyle = \"red\";\n    obstacles.forEach(obs => ctx.fillRect(obs.x, obs.y, obs.width, obs.height));\n}\n\nfunction update() {\n    if (gameOver) return;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    dino.dy += dino.gravity;\n    dino.y += dino.dy;\n    if (dino.y >= 150) {\n        dino.y = 150;\n        dino.dy = 0;\n        dino.grounded = true;\n    }\n\n    if (frame % 90 === 0) {\n        obstacles.push({ x: 800, y: 160, width: 20, height: 40 });\n    }\n\n    obstacles.forEach(obs => {\n        obs.x -= 5;\n        if (obs.x + obs.width < 0) obstacles.shift();\n        if (dino.x < obs.x + obs.width && dino.x + dino.width > obs.x && dino.y + dino.height > obs.y) {\n            gameOver = true;\n            alert(\"Game Over! Refresh to restart.\");\n        }\n    });\n\n    drawDino();\n    drawObstacles();\n    frame++;\n    requestAnimationFrame(update);\n}\n\ndocument.addEventListener(\"keydown\", (e) => {\n    if (e.code === \"Space\" && dino.grounded) {\n        dino.dy = dino.jumpPower;\n        dino.grounded = false;\n    }\n});\n\nupdate();\n"],"names":["modal","btn","span","event","canvas","ctx","dino","obstacles","frame","gameOver","drawDino","drawObstacles","obs","update","e"],"mappings":"0uBACA,IAAIA,EAAQ,SAAS,eAAe,SAAS,EAGzCC,EAAM,SAAS,eAAe,OAAO,EAGrCC,EAAO,SAAS,uBAAuB,OAAO,EAAE,CAAC,EAGrDD,EAAI,QAAU,UAAY,CACtBD,EAAM,MAAM,QAAU,OAC1B,EAGAE,EAAK,QAAU,UAAY,CACvBF,EAAM,MAAM,QAAU,MAC1B,EAGA,OAAO,QAAU,SAAUG,EAAO,CAC1BA,EAAM,QAAUH,IAChBA,EAAM,MAAM,QAAU,OAE9B,ECxBA,MAAMI,EAAS,SAAS,eAAe,YAAY,EAC7CC,EAAMD,EAAO,WAAW,IAAI,EAElC,IAAIE,EAAO,CAAE,EAAG,GAAI,EAAG,IAAK,MAAO,GAAI,OAAQ,GAAI,GAAI,EAAG,QAAS,GAAK,UAAW,IAAK,SAAU,IAC9FC,EAAY,CAAA,EACZC,EAAQ,EACRC,EAAW,GAEf,SAASC,GAAW,CAChBL,EAAI,UAAY,QAChBA,EAAI,SAASC,EAAK,EAAGA,EAAK,EAAGA,EAAK,MAAOA,EAAK,MAAM,CACxD,CAEA,SAASK,GAAgB,CACrBN,EAAI,UAAY,MAChBE,EAAU,QAAQK,GAAOP,EAAI,SAASO,EAAI,EAAGA,EAAI,EAAGA,EAAI,MAAOA,EAAI,MAAM,CAAC,CAC9E,CAEA,SAASC,GAAS,CACVJ,IACJJ,EAAI,UAAU,EAAG,EAAGD,EAAO,MAAOA,EAAO,MAAM,EAE/CE,EAAK,IAAMA,EAAK,QAChBA,EAAK,GAAKA,EAAK,GACXA,EAAK,GAAK,MACVA,EAAK,EAAI,IACTA,EAAK,GAAK,EACVA,EAAK,SAAW,IAGhBE,EAAQ,KAAO,GACfD,EAAU,KAAK,CAAE,EAAG,IAAK,EAAG,IAAK,MAAO,GAAI,OAAQ,EAAI,CAAA,EAG5DA,EAAU,QAAQK,GAAO,CACrBA,EAAI,GAAK,EACLA,EAAI,EAAIA,EAAI,MAAQ,GAAGL,EAAU,QACjCD,EAAK,EAAIM,EAAI,EAAIA,EAAI,OAASN,EAAK,EAAIA,EAAK,MAAQM,EAAI,GAAKN,EAAK,EAAIA,EAAK,OAASM,EAAI,IACxFH,EAAW,GACX,MAAM,gCAAgC,EAElD,CAAK,EAEDC,IACAC,IACAH,IACA,sBAAsBK,CAAM,EAChC,CAEA,SAAS,iBAAiB,UAAYC,GAAM,CACpCA,EAAE,OAAS,SAAWR,EAAK,WAC3BA,EAAK,GAAKA,EAAK,UACfA,EAAK,SAAW,GAExB,CAAC,EAEDO,EAAQ"}